kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: storagemanager
  namespace: default
  labels:
     run: storagemanager
spec:
  selector:
    matchLabels:
      storagemanager-node: pod
  template:
    metadata:
      name: storagemanager
      labels:
        storagemanager-node: pod
        app: storagemanager
    spec:
      {% if cnf["dnsPolicy"] %}
      dnsPolicy: {{cnf["dnsPolicy"]}}
      {% endif %}
      nodeSelector:
        storagemanager: active
      hostNetwork: true
      containers:
      - name: storagemanager
        image: {{cnf["worker-dockerregistry"]}}{{cnf["dockerprefix"]}}{{cnf["storagemanager"]}}:{{cnf["dockertag"]}}
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /StorageManager
          name: storagemanager-config
        - mountPath: /var/log/storagemanager
          name: storagemanager-log
        {% if cnf["storage_monitor"] %}
          {% if cnf["storage_monitor"]["scan_points"] %}
            {% for sp in cnf["storage_monitor"]["scan_points"] %}
              {% if sp["name"] and sp["path"] and sp["hostPath"] %}
        - mountPath: {{sp["path"]}}
          name: {{sp["name"]}}
              {% endif %}
            {% endfor %}
          {% endif %}
        {% endif %}
      volumes:
      - name: storagemanager-config
        hostPath:
          path: /etc/StorageManager
      - name: storagemanager-log
        hostPath:
          path: /var/log/storagemanager
      {% if cnf["storage_monitor"] %}
        {% if cnf["storage_monitor"]["scan_points"] %}
          {% for sp in cnf["storage_monitor"]["scan_points"] %}
            {% if sp["name"] and sp["path"] and sp["hostPath"]%}
      - name: {{sp["name"]}}
        hostPath:
          path: {{sp["hostPath"]}}
            {% endif %}
          {% endfor %}
        {% endif %}
      {% endif %}
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
