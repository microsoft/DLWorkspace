apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        task: monitoring
        app: grafana
    spec:
      nodeSelector:
        grafana: active
      hostNetwork: true
      hostPID: false
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: grafana
        image: dlws/grafana:5.0.4
        imagePullPolicy: Always
        ports:
        - containerPort: {{cnf["grafana"]["port"]}}
          protocol: TCP
        volumeMounts:
        - mountPath: /grafana-configuration
          name: grafana-confg-volume
        - mountPath: /etc/ssl/certs
          name: ca-certificates
          readOnly: true
        - mountPath: /etc/hostname-fqdn
          name: hostname-fqdn
          readOnly: true
        resources:
          limits:
            memory: "256Mi"
        env:
        - name : GRAFANA_URL
          value: 'http://127.0.0.1:{{cnf["grafana"]["port"]}}' # for script to install dashboard only
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_SERVER_HTTP_PORT
          value: '{{cnf["grafana"]["port"]}}'
          # The following env variables are required to make Grafana accessible via
          # the kubernetes api-server proxy. On production clusters, we recommend
          # removing these env variables, setup auth for grafana, and expose the grafana
          # service using a LoadBalancer or a public IP.
        - name: GF_AUTH_BASIC_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
        #  value: Admin
          value: Viewer
        - name: GF_SERVER_ROOT_URL
          # If you're only using the API Server proxy, set this value instead:
          #value: /api/v1/proxy/namespaces/kube-system/services/monitoring-grafana/
          #value: /grafana/
          value: /
      volumes:
      - name: grafana-confg-volume
        configMap:
          name: grafana-configuration
      - name: ca-certificates
        hostPath:
          path: /etc/ssl/certs
      - name: hostname-fqdn
        hostPath:
          path: /etc/hostname-fqdn
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
