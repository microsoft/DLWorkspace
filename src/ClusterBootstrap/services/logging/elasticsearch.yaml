apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: elasticsearch
  namespace: kube-system
  labels:
    k8s-app: elasticsearch
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  selector:
    matchLabels:
      k8s-app: elasticsearch
  template:
    metadata:
      labels:
        k8s-app: elasticsearch
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '{{cnf["elasticsearch"]["port"]["exporter"]}}'
    spec:
      hostNetwork: true
      nodeSelector:
        elasticsearch: active
      initContainers:
      - name: elasticsearch-sysctl
        image: alpine:3.9
        command:
        - "/sbin/sysctl"
        - "-w"
        - "vm.max_map_count=262144"
        securityContext:
          privileged: true
      - name: elasticsearch-chown
        image: alpine:3.9
        command:
        - "chown"
        - "-R"
        - "1000:1000"
        - "/usr/share/elasticsearch/data"
        volumeMounts:
        - name: elasticsearch
          mountPath: /usr/share/elasticsearch/data
      containers:
      - name: elasticsearch
        image: '{{cnf["dockers"]["container"]["elasticsearch"]["fullname"]}}'
        env:
        - name: "node.name"
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: "discovery.zen.ping.unicast.hosts"
          value: '
            {%- for elasticsearch_node in cnf["elasticsearch_node"] -%}
            {{elasticsearch_node}}{{"," if not loop.last}}
            {%- endfor -%}
          '
        - name: "http.port"
          value: '{{cnf["elasticsearch"]["port"]["http"]}}'
        - name: "transport.port"
          value: '{{cnf["elasticsearch"]["port"]["transport"]}}'
        ports:
        - containerPort: {{cnf["elasticsearch"]["port"]["http"]}}
          name: http
          protocol: TCP
        - containerPort: {{cnf["elasticsearch"]["port"]["transport"]}}
          name: transport
          protocol: TCP
        volumeMounts:
        - name: elasticsearch
          mountPath: /usr/share/elasticsearch/data
      - name: elasticsearch-exporter
        image: '{{cnf["dockers"]["container"]["elasticsearch-exporter"]["fullname"]}}'
        args:
        - '--es.uri=http://127.0.0.1:{{cnf["elasticsearch"]["port"]["http"]}}'
        - '--web.listen-address=:{{cnf["elasticsearch"]["port"]["exporter"]}}'
        resources:
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        ports:
        - containerPort: {{cnf["elasticsearch"]["port"]["exporter"]}}
          name: web
          protocol: TCP
      volumes:
      - name: elasticsearch
        hostPath:
          path: /data/elasticsearch
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule

---

apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: kube-system
  labels:
    k8s-app: elasticsearch
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  selector:
    k8s-app: elasticsearch
  ports:
  - name: http
    port: {{cnf["elasticsearch"]["port"]["http"]}}
    targetPort: {{cnf["elasticsearch"]["port"]["http"]}}
