apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: kube-system
  labels:
    k8s-app: fluentd
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  selector:
    matchLabels:
      k8s-app: fluentd
  template:
    metadata:
      labels:
        k8s-app: fluentd
        kubernetes.io/cluster-service: "true"
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '{{cnf["fluentd"]["port"]}}'
    spec:
      hostNetwork: true
      containers:
      - name: fluentd
        image: '{{cnf["dockers"]["container"]["fluentd-kubernetes-daemonset"]["fullname"]}}'
        env:
        - name: FLUENT_ELASTICSEARCH_SCHEME
          value: "http"
        - name: FLUENT_ELASTICSEARCH_HOST
          value: '$(ELASTICSEARCH_SERVICE_HOST)'
        - name: FLUENT_ELASTICSEARCH_PORT
          value: '$(ELASTICSEARCH_SERVICE_PORT)'
        - name: FLUENTD_PROMETHEUS_PORT
          value: '{{cnf["fluentd"]["port"]}}'
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        ports:
        - containerPort: {{cnf["fluentd"]["port"]}}
          name: http
          protocol: TCP
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: datalibdockercontainers
          mountPath: /data/lib/docker/containers
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: datalibdockercontainers
        hostPath:
          path: /data/lib/docker/containers
