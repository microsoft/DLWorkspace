kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: dashboard
spec:
  selector:
    matchLabels:
      app: dashboard
  template:
    metadata:
      name: dashboard
      labels:
        app: dashboard
    spec:
      {% if cnf["dnsPolicy"] %}    
      dnsPolicy: {{cnf["dnsPolicy"]}}
      {% endif %}
      nodeSelector:
        dashboard: active
      hostNetwork: true
      containers:
      - name: dashboard
        image: '{{cnf["worker-dockerregistry"]}}/{{cnf["dockerprefix"]}}/dashboard:{{cnf["dockertag"]}}'
        imagePullPolicy: Always
        env:
        - name: PORT
          value: '{{cnf["dashboard"]["port"]}}'
        ports:
        - name: http
          containerPort: {{cnf["dashboard"]["port"]}}
        volumeMounts:
        - name: config
          mountPath: /usr/src/app/config
      {% if cnf["private_docker_registry_username"] %}
      imagePullSecrets:
      - name: svccred
      {% endif %}
      volumes:
      - name: config
        configMap:
          name: dashboard
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: node-role.kubernetes.io/master
        effect: NoSchedule

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: dashboard
data:
  production.yaml: |
    sign: {{cnf["master_token"]}}

    masterToken: {{cnf["master_token"]}}

    activeDirectory:
      tenant: {{cnf["activeDirectory"]["tenant"]}}
      clientId: {{cnf["activeDirectory"]["clientId"]}}
      clientSecret: {{cnf["activeDirectory"]["clientSecret"]}}

    clusters:
      {{cnf["cluster_name"]}}:
        restfulapi: http://{{cnf["kubernetes_master_node"][0]}}:{{cnf["restfulapiport"]}}
        grafana: http://{{cnf["Dashboards"]["grafana"]["servers"]}}:{{cnf["Dashboards"]["grafana"]["port"]}}
        workStorage: {{cnf["workFolderAccessPoint"]}}
        dataStorage: {{cnf["dataFolderAccessPoint"]}}

    frontend:
      addGroup: https://dlts.azurewebsites.net/v2/htmlfiles/Overview/VirtualClusters.html
      wiki: https://aka.ms/dltsuserwiki_v2
