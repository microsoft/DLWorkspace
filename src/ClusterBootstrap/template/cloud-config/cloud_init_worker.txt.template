#cloud-config
users:
  - default
  - name: {{cnf["worker_user"]}}
    groups: sudo
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
runcmd:
 - cd /home/{{cnf["worker_user"]}}
 - echo "export USER={{cnf["worker_user"]}}" >> boot.env
 - echo "export KUBE_LABELS=\"{{cnf['kube_labels'] | join(',')}}\"" >> boot.env
 - echo "export ETCD_ENDPOINTS='{{cnf["escaped_etcd_endpoints"]}}'" >> boot.env
 - echo "export KUBE_API_SERVER='{{cnf["escaped_api_servers"]}}'" >> boot.env
 - echo "export MOD_2_CP='{{cnf["file_modules_2_copy"] | join(';')}}'" >> boot.env
 # file share mount
 - echo "export MNT_N_LNK='{{cnf["mount_and_link"] | join(';')}}'" >> boot.env
 - curl -fsSL https://get.docker.com -o get-docker.sh; sh get-docker.sh
 - sudo usermod -aG docker {{cnf["worker_user"]}}
 - sudo setfacl -m user:{{cnf["worker_user"]}}:rw /var/run/docker.sock
 {% if "private_docker_registry" in cnf and "cloudinit" in cnf["private_docker_registry"] %}
 {% set cldinit_regname = cnf["private_docker_registry"]["cloudinit"] %}
 - docker login {{cldinit_regname}} -u {{cnf["private_docker_credential"][cldinit_regname]["username"]}} -p {{cnf["private_docker_credential"][cldinit_regname]["password"]}}
 {% else %}
 {% set cldinit_regname = cnf["dockerregistry"] %}
 {% endif %}
 - docker pull {{cldinit_regname}}/{{cnf["cluster_name"].lower()}}/cloudinit
 - docker logout {{cldinit_regname}}
 - docker create -ti --name bootpack {{cldinit_regname}}/{{cnf["cluster_name"].lower()}}/cloudinit bash
 - docker cp bootpack:/usr/cloudinit.tar ./
 - tar -xvf cloudinit.tar
 - cd cloudinit
 - ./cloud_init_worker.sh
output: {all: '| tee -a /home/{{cnf["worker_user"]}}/cloud-init-output.log'}