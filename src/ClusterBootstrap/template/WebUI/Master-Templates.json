[{"Name":"Caffe training example","Username":"","Json":"{\"jobName\" : \"caffe training example - resnet18\", \"resourcegpu\" : 1, \"workPath\" : \"samples\", \"image\" : \"bvlc/caffe:gpu\", \"cmd\" : \"caffe train -solver /work/caffe/solver_resnet18.prototxt\", \"interactivePort\" : \"\"}\r\n","Database":"Master"},{"Name":"Caffe-iPython-SSH-CPU","Username":"jinl@microsoft.com","Json":"{\"jobName\":\"caffe-ssh-ipython-cpu\",\"resourcegpu\":0,\"workPath\":\"./\",\"dataPath\":\"imagenet\",\"jobPath\":\"\",\"image\":\"bvlc/caffe:cpu\",\"cmd\":\"apt-get update && apt-get install -y --no-install-recommends python-pip openssh-server sudo && pip install jupyter && addgroup --force-badname --gid  $$gid$$ domainusers && adduser --force-badname --home /home/$$username$$ --shell /bin/bash --uid $$uid$$  -gecos '' $$username$$  --gid $$gid$$ --disabled-password  && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) $$username$$ && adduser $$username$$ sudo && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && ( mkdir -p /root/.ssh && cat /work/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys && mkdir -p /home/$$username$$/.ssh && cat /work/.ssh/id_rsa.pub >> /home/$$username$$/.ssh/authorized_keys && cp /work/.ssh/id_rsa* /home/$$username$$/.ssh/ ;  chown -R $$username$$ /home/$$username$$/ || /bin/true ) && service ssh restart && env | while read line; do if [[ $line != HOME=* ]] && [[ $line != INTERACTIVE* ]] ; then echo \\\"export $line\\\" >> /home/$$username$$/.bashrc; fi; done &&  export HOME=/job && runuser -l $$username$$ -c \\\"jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\\\"\",\"is_interactive\":true,\"do_log\":false,\"interactivePort\":\"22, 8888\",\"runningasroot\":true,\"mountpoints\":[],\"env\":[],\"jobtrainingtype\":\"RegularJob\",\"enableworkpath\":true,\"enabledatapath\":true,\"enablejobpath\":true}","Database":"Master"},{"Name":"Tensorflow training example","Username":"","Json":"{\"jobName\" : \"Tensorflow training example - inception\", \"resourcegpu\" : 1, \"workPath\" : \"samples\", \"image\" : \"tensorflow/tensorflow:0.12.1-gpu\", \"cmd\" : \"/work/tensorflow/models/inception/bazel-bin/inception/imagenet_train --num_gpus=1 --batch_size=32 --train_dir=/job/model --data_dir=/data/tensor\", \"interactivePort\" : \"\"}\r\n","Database":"Master"},{"Name":"Tensorflow-IPython-GPU","Username":"","Json":"{\"jobName\":\"tensorflow-ipython\",\"resourcegpu\":1,\"image\":\"tensorflow/tensorflow:latest-gpu\",\"cmd\":\"export HOME=/job && jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\",\"is_interactive\":true,\"mountpoints\":[{\"containerPath\":\"/home/jinl\",\"hostPath\":\"/dlwsdata/work/jinl\",\"description\":\"NFS (remote file share)\",\"enabled\":true,\"$$hashKey\":\"object:102\"},{\"containerPath\":\"/glusterfs/public\",\"hostPath\":\"/dlwsdata/glusterfs/public\",\"description\":\"GlusterFS (replicated distributed storage)\",\"enabled\":true,\"$$hashKey\":\"object:74\"}],\"do_log\":false,\"runningasroot\":false,\"env\":[],\"PSDistJob\":false,\"jobtrainingtype\":\"RegularJob\",\"enableworkpath\":true,\"enabledatapath\":true,\"enablejobpath\":true,\"interactivePort\":\"8888\"}","Database":"Master"},{"Name":"Test Template","Username":"","Json":"{\"image\":\"ubuntu:16.04\"}","Database":"Master"},{"Name":"tutorial-caffe2-cpu","Username":"","Json":"{\"jobName\":\"caffe2-detectron-cpu\",\"resourcegpu\":0,\"workPath\":\"./\",\"dataPath\":\"imagenet\",\"jobPath\":\"\",\"image\":\"dlws/tutorial-caffe2-cpu:1.5\",\"cmd\":\"apt-get update && apt-get install -y --no-install-recommends openssh-server sudo &&  addgroup --force-badname --gid  $$gid$$ domainusers && adduser --force-badname --home /home/$$username$$ --shell /bin/bash --uid $$uid$$  -gecos '' $$username$$  --gid $$gid$$ --disabled-password  && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) $$username$$ && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) root && adduser $$username$$ sudo && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && mkdir -p /root/.ssh && cat /work/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys && service ssh restart && env | while read line; do if [[ $line != HOME=* ]] && [[ $line != INTERACTIVE* ]] ; then echo \\\"export $line\\\" >> /home/$$username$$/.bashrc; fi; done &&  export HOME=/job && jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/ --allow-root\",\"is_interactive\":true,\"do_log\":false,\"interactivePort\":\"22, 8888, 6006\",\"runningasroot\":true,\"mountpoints\":[],\"env\":[],\"jobtrainingtype\":\"RegularJob\",\"enableworkpath\":true,\"enabledatapath\":true,\"enablejobpath\":true}","Database":"Master"},{"Name":"Tutorial-pytorch","Username":"jinl@microsoft.com","Json":"{\"jobName\":\"tutorial-pytorch\",\"resourcegpu\":1,\"workPath\":\"./\",\"dataPath\":\"imagenet\",\"jobPath\":\"\",\"image\":\"dlws/tutorial-pytorch:1.5\",\"cmd\":\"apt-get update && apt-get install -y --no-install-recommends openssh-server sudo &&  addgroup --force-badname --gid  $$gid$$ domainusers && adduser --force-badname --home /home/$$username$$ --shell /bin/bash --uid $$uid$$  -gecos '' $$username$$  --gid $$gid$$ --disabled-password  && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) $$username$$ && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) root && adduser $$username$$ sudo && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && mkdir -p /root/.ssh && cat /work/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys && ( chown -R $$username$$ /home/$$username$$/ || /bin/true ) && service ssh restart && env | while read line; do if [[ $line != HOME=* ]] && [[ $line != INTERACTIVE* ]] ; then echo \\\"export $line\\\" >> /home/$$username$$/.bashrc; fi; done &&  export HOME=/job && export LD_LIBRARY_PATH=/usr/local/nvidia/lib64/ ; runuser -p -l $$username$$ -c \\\"source /home/$$username$$/.bashrc && export PATH=/opt/conda/envs/pytorch-py35/bin/:$PATH; jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\\\"\",\"is_interactive\":true,\"do_log\":false,\"interactivePort\":\"22, 8888, 6006\",\"runningasroot\":true,\"mountpoints\":[],\"env\":[],\"jobtrainingtype\":\"RegularJob\",\"enableworkpath\":true,\"enabledatapath\":true,\"enablejobpath\":true,\"isPrivileged\":true,\"dnsPolicy\":\"Default\",\"hostIPC\":true}","Database":"Master"},{"Name":"tutorial-tensorflow","Username":"jinl@microsoft.com","Json":"{\"jobName\":\"tutorial-tensorflow\",\"resourcegpu\":1,\"workPath\":\"./\",\"dataPath\":\"imagenet\",\"jobPath\":\"\",\"image\":\"dlws/tutorial-tensorflow:1.5\",\"cmd\":\"apt-get update && apt-get install -y --no-install-recommends openssh-server sudo && addgroup --force-badname --gid  $$gid$$ domainusers && adduser --force-badname --home /home/$$username$$ --shell /bin/bash --uid $$uid$$  -gecos '' $$username$$  --gid $$gid$$ --disabled-password  && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) $$username$$ && adduser $$username$$ sudo && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && ( mkdir -p /root/.ssh && cat /work/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys && mkdir -p /home/$$username$$/.ssh && cat /work/.ssh/id_rsa.pub >> /home/$$username$$/.ssh/authorized_keys && cp /work/.ssh/id_rsa* /home/$$username$$/.ssh/ ;  chown -R $$username$$ /home/$$username$$/ || /bin/true )  && service ssh restart && env | while read line; do if [[ $line != HOME=* ]] && [[ $line != INTERACTIVE* ]] ; then echo \\\"export $line\\\" >> /home/$$username$$/.bashrc; fi; done &&  export HOME=/job &&  runuser -l $$username$$ -c \\\"source /home/$$username$$/.bashrc && jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\\\"\",\"is_interactive\":true,\"do_log\":false,\"interactivePort\":\"22, 8888, 6006\",\"runningasroot\":true,\"mountpoints\":[],\"env\":[{\"name\":\"LD_LIBRARY_PATH\",\"value\":\"/usr/local/nvidia/lib64/\",\"$$hashKey\":\"object:134\"}],\"jobtrainingtype\":\"RegularJob\",\"enableworkpath\":true,\"enabledatapath\":true,\"enablejobpath\":true}","Database":"Master"},{"Name":"tutorial-tensorflow-cpu","Username":"jinl@microsoft.com","Json":"{\"jobName\":\"tutorial-tensorflow-cpu\",\"resourcegpu\":0,\"workPath\":\"./\",\"dataPath\":\"imagenet\",\"jobPath\":\"\",\"image\":\"dlws/tutorial-tensorflow-cpu:1.5\",\"cmd\":\"apt-get update && apt-get install -y --no-install-recommends openssh-server sudo && addgroup --force-badname --gid  $$gid$$ domainusers && adduser --force-badname --home /home/$$username$$ --shell /bin/bash --uid $$uid$$  -gecos '' $$username$$  --gid $$gid$$ --disabled-password  && usermod -p $(echo tryme2017 | openssl passwd -1 -stdin) $$username$$ && adduser $$username$$ sudo && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && ( mkdir -p /root/.ssh && cat /work/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys && mkdir -p /home/$$username$$/.ssh && cat /work/.ssh/id_rsa.pub >> /home/$$username$$/.ssh/authorized_keys && cp /work/.ssh/id_rsa* /home/$$username$$/.ssh/ ;  chown -R $$username$$ /home/$$username$$/ || /bin/true )  && service ssh restart && env | while read line; do if [[ $line != HOME=* ]] && [[ $line != INTERACTIVE* ]] ; then echo \\\"export $line\\\" >> /home/$$username$$/.bashrc; fi; done &&  export HOME=/job && runuser -l $$username$$ -c \\\"jupyter notebook --no-browser --port=8888 --ip=0.0.0.0 --notebook-dir=/\\\"\",\"is_interactive\":true,\"do_log\":false,\"interactivePort\":\"22, 8888, 6006\",\"runningasroot\":true,\"mountpoints\":[],\"env\":[{\"name\":\"LD_LIBRARY_PATH\",\"value\":\"/usr/local/nvidia/lib64/\",\"$$hashKey\":\"object:134\"}],\"jobtrainingtype\":\"RegularJob\",\"enableworkpath\":true,\"enabledatapath\":true,\"enablejobpath\":true}","Database":"Master"}]