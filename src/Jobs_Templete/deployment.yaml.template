apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ job["jobId"] }}-deployment
  labels:
    run: {{ job["jobId"] }}
    jobId: {{ job["jobId"] }}
spec:
  replicas: {{ job["deployment_replicas"] }}
  selector:
    matchLabels:
      jobId: {{ job["jobId"] }}
      worker: active
  template:
    metadata:
      labels:
        jobId: {{ job["jobId"] }}
        worker: active
        jobRole: worker
        userName: {{ job["user"] }}
        vcName: {{ job["vcName"] }}
        type: job
    affinity:
      podAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: jobId
                operator: In
                values:
                - {{ job["jobId"] }}
            topologyKey: kubernetes.io/hostname
    spec:
      containers:
      - name: main
        image: {{ job["image"] }}
        imagePullPolicy: Always
        command: ["sh", "-c", "printenv DLTS_LAUNCH_CMD > /pod/job_command.sh ; bash -x /pod/job_command.sh"]
        securityContext:
          runAsUser: {{ job["containerUserId"] }}
          capabilities:
            add:
            - IPC_LOCK
            - SYS_ADMIN
        resources:
          limits:
            nvidia.com/gpu: 1
        {% if not job["cpurequest"] %}
          requests:
            cpu: 1.0
        {% else %}
          requests:
            cpu: {{ job["cpurequest"] }}
        {% endif %}
        {% if job["memoryrequest"] %}
          requests:
            memory: {{ job["memoryrequest"] }}
        {% endif %}
        volumeMounts:
        - name: "dlws-scripts"
          mountPath: /pod/scripts
          readOnly: true
        - name: ssh-volume
          mountPath: /home/{{ job["user"] }}/.ssh
        {% if not job["dnsPolicy"] %}
        - mountPath: /etc/resolv.conf
          name: resolv
        {% endif %}
        {% for mp in job["mountpoints"] %}
        {% if mp["enabled"] %}
        - name: {{ mp["name"] }}
          mountPath: {{ mp["mountPath"] }}
          {% if mp["subPath"] %}
          subPath: {{ mp["subPath"] }}
          {% endif %}
          {% if mp["readOnly"] %}
          readOnly: true
          {% endif %}
        {% endif %}
        {% endfor %}

        env:
        - name: FAMILY_TOKEN
          value: {{ job["familyToken"] }}
        - name: DLWS_ROLE_NAME
          value: worker
        - name: DLTS_ROLE_NAME
          value: worker
        - name: DLWS_JOB_ID
          value: {{ job["jobId"] }}
        - name: DLTS_JOB_ID
          value: {{ job["jobId"] }}
        - name: DLWS_NUM_GPU_PER_WORKER
          value: "1"
        - name: DLTS_NUM_GPU_PER_WORKER
          value: "1"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DLWS_GID
          value: "{{ job["gid"] }}"
        - name: DLTS_GID
          value: "{{ job["gid"] }}"
        - name: DLWS_UID
          value: "{{ job["uid"] }}"
        - name: DLTS_UID
          value: "{{ job["uid"] }}"
        - name: DLWS_USER_NAME
          value: "{{ job["user"] }}"
        - name: DLTS_USER_NAME
          value: "{{ job["user"] }}"
        - name: DLWS_USER_EMAIL
          value: "{{ job["user_email"] }}"
        - name: DLTS_USER_EMAIL
          value: "{{ job["user_email"] }}"
        - name: DLWS_VC_NAME
          value: {{ job["vcName"] }}
        - name: DLTS_VC_NAME
          value: {{ job["vcName"] }}
        {% for env in job["envs"] %}
        - name: {{env.name}}
          value: "{{env.value}}"
        {% endfor %}
        {% for key_value in job["ssh_public_keys"] %}
        - name: DLTS_PUBLIC_SSH_KEY_{{loop.index}}
          value: "{{key_value}}"
        {% endfor %}

      imagePullSecrets:
      - name: regcred

      restartPolicy: Always
      volumes:
      - name: "dlws-scripts"
        configMap:
          name: "dlws-scripts"
      - name: ssh-volume
        emptyDir: {}
      {% if not job["dnsPolicy"] %}
      - name: resolv
        hostPath:
          path: /etc/resolv.conf
      {% endif %}
      - name: dshm
        emptyDir:
          medium: Memory
      {% if job["mountpoints"] %}
      {% for mp in job["mountpoints"] %}
      {% if mp["enabled"] %}
      - name: {{ mp["name"] }}
      {% if mp["emptydir"] %}
        emptyDir: {}
      {% elif mp["mountType"] == "hostPath" %}
        hostPath:
          path: {{ mp["hostPath"] }}
          {% if mp["type"] %}
          type: {{ mp["type"] }}
          {% endif %}
      {% elif mp["mountType"] == "nfs" %}
        nfs:
          server: {{ mp["server"] }}
          path: {{ mp["path"] }}
      {% elif mp["mountType"] == "blobfuse" %}
        flexVolume:
          driver: "azure/blobfuse"
          readOnly: false
          secretRef:
            name: {{ mp["secreds"] }}
          options:
            container: {{ mp["containerName"] }}
            {% if mp["rootTmppath"] and mp["tmppath"] %}
            tmppath: {{ mp["rootTmppath"] }}/{{ job["jobId"] }}/{{ job["podName"] }}/{{ mp["tmppath"] }}
            {% endif %}
            {% if mp["mountOptions"] %}
            mountoptions: {{ mp["mountOptions"] }}
            {% endif %}
      {% endif %}
      {% endif %}
      {% endfor %}
      {% endif %}
